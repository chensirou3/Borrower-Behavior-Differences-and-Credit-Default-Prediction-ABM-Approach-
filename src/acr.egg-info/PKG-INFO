Metadata-Version: 2.4
Name: acr
Version: 0.1.0
Summary: Agent-Based Model for Credit Risk with Behavioral Proxies
Author-email: Research Team <research@example.com>
License: MIT
Classifier: Development Status :: 3 - Alpha
Classifier: Intended Audience :: Science/Research
Classifier: License :: OSI Approved :: MIT License
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.10
Classifier: Programming Language :: Python :: 3.11
Classifier: Programming Language :: Python :: 3.12
Requires-Python: >=3.10
Description-Content-Type: text/markdown
License-File: LICENSE
Requires-Dist: numpy>=1.24.0
Requires-Dist: pandas>=2.0.0
Requires-Dist: scikit-learn>=1.3.0
Requires-Dist: matplotlib>=3.7.0
Requires-Dist: xgboost>=1.7.0
Requires-Dist: pydantic>=2.0.0
Requires-Dist: typer>=0.9.0
Requires-Dist: PyYAML>=6.0
Requires-Dist: rich>=13.0.0
Provides-Extra: dev
Requires-Dist: black>=23.0.0; extra == "dev"
Requires-Dist: ruff>=0.0.280; extra == "dev"
Requires-Dist: mypy>=1.5.0; extra == "dev"
Requires-Dist: pytest>=7.4.0; extra == "dev"
Requires-Dist: pytest-cov>=4.1.0; extra == "dev"
Provides-Extra: mesa
Requires-Dist: mesa>=2.1.0; extra == "mesa"
Dynamic: license-file

# ABM Credit Risk (ACR) - 信贷风控代理模型

基于代理的信贷风险建模框架，集成行为画像特征的本科可发表研究项目。

## 项目概述

本项目实现了一个模块化的信贷风险仿真系统，主要特点：

- **代理建模**：基于个体特质的借款人行为仿真
- **画像代理**：通过弱相关映射将潜在特质转换为可观测的行为画像
- **环境周期**：十年经济周期的利率和宏观环境变化
- **风控建模**：传统基线特征 vs 增强画像特征的比较
- **公平性分析**：不同人群的模型公平性评估

## 快速开始

### 安装

```bash
pip install -r requirements.txt
pip install -e .
```

### 基础运行

```bash
# 运行默认仿真实验
acr run-sim --config configs/experiment.yaml

# 评估模型性能
acr eval --run outputs/run-YYYYMMDD_HHMMSS/ --augmented true

# 生成可视化图表
acr plots --run outputs/run-YYYYMMDD_HHMMSS/

# 参数扫描实验
acr sweep --config configs/experiment.yaml --set environment.approval.q_amp=[0.05,0.10,0.15,0.20]
```

### 配置定制

主要配置参数：

```yaml
# 人口规模和时间跨度
population:
  N: 5000
timeline:
  T: 120  # 月，十年

# 特质分布（独立截断正态）
traits:
  gamma:  { mean: 2.0,  sd: 0.6,  min: 0.5,  max: null }
  beta:   { mean: 0.90, sd: 0.08, min: 0.60, max: 1.00 }
  # ...

# 画像代理映射
proxies:
  noise_sd: 0.12
  mapping:
    night_active_ratio: { kappa: +0.50, beta: -0.20, intercept: 0.20 }
    # ...
```

## 模块架构

- `acr.config`: 配置解析与校验
- `acr.traits`: 特质采样与原型
- `acr.proxies`: 画像代理映射
- `acr.environment`: 环境周期与机制
- `acr.agents`: 借款人代理
- `acr.bank`: 银行决策策略
- `acr.dgp`: 数据生成过程
- `acr.simulation`: 主仿真循环
- `acr.features`: 特征集构造
- `acr.models`: 模型训练管道
- `acr.evaluation`: 评估指标与公平性
- `acr.viz`: 可视化
- `acr.io`: 输入输出管理
- `acr.cli`: 命令行界面

## 数据格式

所有输出采用开放格式：
- 事件数据：`events.csv`
- 指标结果：`metrics.csv`
- 公平性分析：`fairness.json`
- 图表：PNG格式
- 配置快照：`manifest.json`

## 扩展指南

### 添加新的特质采样器

```python
from acr.traits.sampler import TraitSampler

class CustomTraitSampler(TraitSampler):
    def sample(self, N: int, rng: np.random.Generator) -> pd.DataFrame:
        # 实现自定义采样逻辑
        pass
```

### 修改环境机制

```python
from acr.environment.cycles import build_sine_env

def build_custom_env(T: int, cfg, rng) -> EnvSeries:
    # 实现自定义环境逻辑
    pass
```

### 自定义银行策略

```python
from acr.bank.policy import DecisionPolicy

class CustomDecisionPolicy(DecisionPolicy):
    def approve(self, scores: np.ndarray, mode: str, q_or_tau: float) -> np.ndarray:
        # 实现自定义决策逻辑
        pass
```

## 开发阶段

- **阶段 0** (当前): 基础MVE - 独立特质、弱相关画像、基础模型
- **阶段 1**: 银行反馈机制
- **阶段 2**: 相关特质与原型
- **阶段 3**: 复杂环境机制
- **阶段 4**: 公平性优化

## 测试

```bash
pytest tests/
```

## 许可证

MIT License
